// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

// prisma/schema.prisma
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  userId         Int      @id @default(autoincrement())
  name           String
  email          String   @unique
  hashedPassword String
  address        String?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  orders         Order[]
  cart           Cart?
}

model Product {
  productId   Int          @id @default(autoincrement())
  name        String
  description String
  price       Float
  stock       Int
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  cartProducts CartProduct[]
  orderProducts OrderProduct[]
}

model Order {
  orderId   Int      @id @default(autoincrement())
  orderDate DateTime @default(now())
  status    String
  user      User     @relation(fields: [userId], references: [userId])
  userId    Int
  orderProducts OrderProduct[]
}

model Cart {
  cartId      Int          @id @default(autoincrement())
  user        User         @relation(fields: [userId], references: [userId])
  userId      Int          @unique
  cartProducts CartProduct[]
}

model CartProduct {
  cartProductId Int    @id @default(autoincrement())
  cart          Cart   @relation(fields: [cartId], references: [cartId])
  cartId        Int
  product       Product @relation(fields: [productId], references: [productId])
  productId     Int
  quantity      Int
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  @@unique([cartId, productId]) 
}

model OrderProduct {
  orderProductId Int      @id @default(autoincrement())
  order          Order    @relation(fields: [orderId], references: [orderId])
  orderId        Int
  product        Product  @relation(fields: [productId], references: [productId])
  productId      Int
  quantity       Int
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  @@unique([orderId, productId])
}

